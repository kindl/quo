module copy;

extern int puts(Pointer<char> str);
extern Pointer<FILE> fopen(Pointer<char> filename, Pointer<char> mode);
extern int fgetc(Pointer<FILE> stream);
extern int fputc(int character, Pointer<FILE> stream);
extern int fclose(Pointer<FILE> stream);
extern Pointer<void> malloc(usize size);

int EOF = -1;

void copyWithLoop(Pointer<FILE> srcFileHandle, Pointer<FILE> destFileHandle)
{
    let c = fgetc(srcFileHandle);
    while (c != EOF) {
        fputc(c, destFileHandle);
        c = fgetc(srcFileHandle);
    }
}

// This code has some issues
// First, it does not copy file meta data like executable flags
// Second, it does not have proper cleanup code
// It should be revisited when quo provides more cleanup capabilities
int main(int argc, Pointer<char>[] argv) {
    if (argc < 3) {
        puts("Usage: copy <source> <destionation>");
        return -1;
    }
    
    let src = argv[1];
    let dest = argv[2];

    let srcFileHandle = fopen(src, "r");
    if (srcFileHandle == nullptr)
    {
        return -1;
    }

    let destFileHandle = fopen(dest, "w");
    if (destFileHandle == nullptr)
    {
        return -1;
    }

    copyWithLoop(srcFileHandle, destFileHandle);

    fclose(srcFileHandle);
    fclose(destFileHandle);

    puts("Done");

    return 0;
}
